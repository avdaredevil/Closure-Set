param($a,[Switch]$Mask)
# =======================================START=OF=COMPILER==========================================================|
#    The Following Code was added by AP-Compiler Version [1.2] To Make this program independent of AP-Core Engine
#    GitHub: https://github.com/avdaredevil/AP-Compiler
# ==================================================================================================================|
$Script:PSHell=$(if($PSHell){$PSHell}elseif($PSScriptRoot){$PSScriptRoot}else{"."});
iex ([System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String("")))
# ========================================END=OF=COMPILER===========================================================|

<#@
    AP-IMPORT: extra(KeyPressed)
@#>

$a = JS-OR $a {$t = Get-Clipboard;if ($t.indexOf(",")+1) {$t}} {Input-Prompt "Enter Rules: "};$Arr = "\"+[char]8594+"|\?|\-\>"
if (!("$a".indexOf(",")+1)) {Write-AP "!Invalid Rules [No Comma??]";exit}
$Logic = @{}
$Rules = $a.ToUpper() -replace(" |and|or","") -split(",") | ?{"$_".trim()} | % {$pre,$post = $_ -split $arr;[PSCustomObject]@{pre=$pre;post=$post}}

function Merge-Hash($H) {return ((@($H.keys) | sort) -join "")}
function Swap-Check($hsh) {
    $Swaps = 0
    $Rules | ? {
        !($_.pre.toCharArray() | ? {!$hsh[$_]}).length
    } | % {$_.post.toCharArray() | % {if (!$hsh[$_]) {$hsh[$_]=1;$Swaps++}}}
    return $Swaps
}

Write-AP "+Rules:"
$Rules | % {$p = $_.pre;$_.post.toCharArray() | % {Write-AP ">+$p -> $_"}}
$check = ""
while ($check = (Input-Prompt "Enter Query: ").ToUpper()){
    $Hash = @{};$check.toCharArray() | % {$Hash[$_]=1}
    while (Swap-Check $Hash) {}
    if ($Mask) {$check.toCharArray() | % {$Hash.remove($_)}}
    Merge-Hash $Hash
}
